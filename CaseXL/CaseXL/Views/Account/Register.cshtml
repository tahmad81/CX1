@model CaseXL.Models.RegisterModel
@{
    ViewBag.Title = "Register";
}

<h2>Register</h2>

@Html.ValidationSummary(true, "Signup was unsuccessful. Please correct the errors and try again.")
@using (Html.BeginForm())
{
    <div class="reg-fileds-set">
	<div class="heading-common">Account Information</div>
        <fieldset>
		
            <div class="editor-label">
                @Html.LabelFor(m => m.UserName)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.UserName)

                @Html.ValidationMessageFor(m => m.UserName)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.Password)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.Password)
                @Html.ValidationMessageFor(m => m.Password)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.ConfirmPassword)
            </div>
            <div class="editor-label">
                @Html.PasswordFor(m => m.ConfirmPassword)
                @Html.ValidationMessageFor(m => m.ConfirmPassword)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.Email)
            </div>
            <div class="editor-label">
                @Html.TextBoxFor(m => m.Email)
                @Html.ValidationMessageFor(m => m.Email)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.FirstName)
            </div>
            <div class="editor-label">
                @Html.TextBoxFor(m => m.FirstName)
                @Html.ValidationMessageFor(m => m.FirstName)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.LastName)
            </div>
            <div class="editor-label">
                @Html.TextBoxFor(m => m.LastName)
                @Html.ValidationMessageFor(m => m.LastName)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.Firm_Code)
            </div>
            <div class="editor-label">
                @Html.TextBoxFor(m => m.Firm_Code)
                @Html.ValidationMessageFor(m => m.Firm_Code)
            </div>
           @* <div class="editor-label">
                @Html.LabelFor(m => m.CCNumber)
            </div>
            <div class="editor-label">
              @Html.TextBoxFor(m => m.CCNumber)
              @Html.ValidationMessageFor(m => m.CCNumber)
            </div>            
            <div class="editor-label">
                  @Html.LabelFor(m => m.CVNNumber)
            </div>*@

           @* <div class="editor-label">
             
             
                @Html.TextBoxFor(m => m.CVNNumber, new { @style = "width:50px" })
                @Html.ValidationMessageFor(m => m.CVNNumber)<br />
             
            </div>*@

          @*  <div class="editor-label">
                @Html.LabelFor(m => m.Exp_Date)
            </div>
            <div class="editor-label">
                @(Html.Kendo().DatePickerFor(m => m.Exp_Date).Format("{0:MMM/yyyy}").Depth(CalendarView.Year).Start(CalendarView.Year).HtmlAttributes(new { @id = "dt" })
                )
                @Html.ValidationMessageFor(m => m.Exp_Date)
            </div>*@
            <p>
                <input type="submit" value="Signup" style="width: 120px; margin-top: 10px" class="btn btn-block btn-large btn-primary" />
                @*<input type="submit" class="k-button actionButton" value="Signup" />*@
            </p>
           @* <div class="AuthorizeNetSeal">
                <script type="text/javascript" lang="javascript">var ANS_customer_id = "4ee51c21-88e6-407f-8dd6-c38594c9b793";</script>
                <script type="text/javascript" lang="javascript" src="//verify.authorize.net/anetseal/seal.js"></script>
                <a href="http://www.authorize.net/" id="AuthorizeNetText" target="_blank">Online Payment Service</a>
                <br />
                <script type="text/javascript" src="https://seal.godaddy.com/getSeal?sealID=leGL7JLTQNMYTkoM371RRCPe6cEX68yRc4oF7jziwqrVSJqe8X"></script>
            </div>*@

        </fieldset>
    </div>
	<div class="reg-data">
<div class="heading-common">Common Questions</div>
<h1>Is Caselinq secure?</h1>
<p>Caselinq ensures strict communication security using bank-grade 256-bit SSL encryption. All of Caselinq's infrastructure is hosted using physically secure, managed datacenters that meet the rigid SAS70 Type II specifications. Geo-redundant backups are performed daily, and site security and privacy are routinely audited by respected 3rd parties, Authorize.net and Go-Daddy.</p>

<h1>How often are new features added to the product?</h1>
<p>We are continually working to ensure that Caselinq remains the leading and most innovative cloud-based trial preparation systems available. Thanks to the valued feedback of our many active subscribers, product improvements and updates are integrated seamlessly several times per month.</p>

<h1>How many attorneys are currently using Caselinq?</h1>
<p>As the leading cloud-based trial preparation system, we're pleased to have a global subscriber base.</p>

<h1>What training options are available for customers?</h1>
<p>We're pleased to provide unlimited free access to live training and comprehensive support resources. Our extensive knowledgebase is complete with helpful walk-throughs, short training videos and accessible answers to frequently asked questions. We are also happy to schedule additional one-on-one training as needed at no additional cost.</p>

<h1>What hours is your tech support available?</h1>
<p>Our Chicago-based support team is available from 8 a.m. to 8 p.m. Central Standard Time (6am to 6pm Pacific Time), Monday to Friday and can be reached by email at <span>support@caselinq.com </span>or by phone at <span>1-800-946-8122</span>.</p>

</div> 
<div style="clear:both;">&nbsp;</div>
}

<script type="text/javascript">
    $(document).ready(function () {
        debugger;
        $.validator.methods.date =
            function (value, element) {
              
            return this.optional(element) || kendo.parseDate(value, "MMM/yyyy");
        }
    });
</script>
