@{
    ViewBag.Title = "Clients";
}

<h2>Clients</h2>
@(Html.Kendo().Grid<CaseXL.ViewModels.ClientVM>().Name("grdusers")

    .Columns(columns =>
    {
        columns.Bound(c => c.Id).Visible(false);
        columns.Bound(c => c.UserName).Template(@<text></text>)
        .ClientTemplate(@"<a class=""k-button-icontext k-grid-edit"" href=""\#"">#=UserName#</a>"); ;
        columns.Bound(c => c.First_Name);
        columns.Bound(c => c.Last_Name);
        columns.Bound(c => c.Id).Template(@<text></text>)
             .Title("Cases").Width(142)
             .ClientTemplate(@"<a href=""\#"" onclick='CaseLink(this)'>Cases</a>");
        columns.Bound(c => c.Id).Title("").Width(38).Filterable(false).Sortable(false).Template(@<text></text>)

                     .ClientTemplate(@"<img src='../Images/delete-icon.png' style='width:38px; height:20px;cursor:pointer' class=""k-button-icontext k-grid-delete""/>")
                    ;

    })
                        .ToolBar(tol => tol.Create().Text("New Client"))

                     .DataSource(dataSource => dataSource
                     .Ajax()
                     .Model(model => model.Id(m => m.Id))
                     .Read(read => read.Action("_Clients", "Client"))
                     .Create(create => create.Action("_ClientCreate", "Client"))
                     .Update(update => update.Action("_ClientUpdate", "Client"))
                     .Events(eve => eve.Error("error"))
                     )
                              .Pageable()
                              .Groupable()
                              .Resizable(res => res.Columns(true)
                              )
                            .Reorderable(red => red.Columns(true))
                            .Navigatable(nav => nav.Enabled(true))
                            .Sortable()

                            .Filterable()
                                .Reorderable(red => red.Columns(true))
                            .Navigatable(nav => nav.Enabled(true))
                            .Sortable()

                            .Filterable()
                            .Editable(edit =>
                            edit.Mode(GridEditMode.PopUp)


                                
                            ).Events(eve =>
                                {
                                    eve.Edit("onEdit");

                                }
                                )


                            )
<script type="text/kendo-template" id="message">
<div class="k-widget k-tooltip k-tooltip-validation k-invalid-msg field-validation-error" style="margin: 0.5em;  " data-for="#=field#" data-valmsg-for="#=field#" id="#=field#_validationMessage">
            <span class="k-icon k-warning"> </span>#=message#<div class="k-callout k-callout-n"></div></div>
</script>
<input type="button" class="k-button" onclick="window.location = '/Home/Main'" value="Home" />


<script type="text/javascript">
    var validationMessageTmpl = kendo.template($("#message").html());

    function error(args) {
        debugger;
        if (args.errors) {
            var grid = $("#grdusers").data("kendoGrid");
            grid.one("dataBinding", function (e) {
                debugger;
                e.preventDefault();   // cancel grid rebind if error occurs                             

                for (var error in args.errors) {
                    var data = args.errors[error].errors+ "\n";
                    
                    showMessage(grid.editable.element, error, args.errors[error].errors);
                }
                alert(data);

            });
        }
    }

    function showMessage(container, name, errors) {
        //add the validation message to the form
        container.find("[data-valmsg-for=" + name + "]")
            .replaceWith($(validationMessageTmpl({ field: name, message: errors[0] })))
    }
</script>

<script id="tmp_clientCase" type="text/kendo-tmpl">
     <div style="padding:5px;border-radius:4px;background:lightgray">
     <div style="border:1px solid gray;border-radius:3px;background:lightgray">
     <div align="center" style="font-weight:bold">Questions</div>
        @Html.Partial("_greenBar")
@(Html.Kendo().Grid<CaseXL.ViewModels.CaseVM>().Name("grdcaseDetailsClients")

    .Columns(columns =>
    {
        columns.Bound(c => c.Case_Id).Visible(false);
        columns.Bound(c => c.Caption).Template(@<text></text>)
        .ClientTemplate(@"<a class=""k-button-icontext k-grid-edit"" href=""\#"">#=Caption#</a>");
        columns.Bound(c => c.Case_Number).Visible(true).Title("Case Number");

        columns.ForeignKey(c => c.Case_Type, new SelectList(CaseXL.Common.Repository.CaseTypes(), "ID", "Name")).Title("Case Type");

        columns.Bound(c => c.Case_Id).Title("").Width(38).Filterable(false).Sortable(false).Template(@<text></text>)
        .ClientTemplate(@"<img src='../Images/delete-icon.png'  title=""Delete Case"" style='width:38px; height:20px;cursor:pointer' class=""k-button-icontext k-grid-delete""/>");
    })
                .ToolBar(tol => tol.Create().Text("New Case"))
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .Model(model => model.Id(m => m.Case_Id))

                    .Read(read => read.Action("_Cases", "Case"))
                       .Update(up => up.Action("_UpdateCase", "Case"))
                       .Create(cr => cr.Action("_CreateCase", "Case"))
                       .Destroy(des => des.Action("_DeleteCase", "Case"))
                )
                  .Pageable()
                  .Groupable()
                  .Resizable(res => res.Columns(true)
                  )
                .Reorderable(red => red.Columns(true))
                .Navigatable(nav => nav.Enabled(true))
                .Sortable()
                .Selectable()
                .Filterable()
                .Editable(edit =>
                edit.Mode(GridEditMode.PopUp)

                ).Events(eve =>
        {
            eve.Edit("onEditt");


        }
            )

            )
    </div>
</script>
<div id="windowCase"></div>
@(Html.Kendo().Window().Name("Details")
    .Title("Issue Linking")
    .Visible(false)
    .Modal(true)
    .Draggable(true)
    .Events(eve =>
    {

    }
        )
   .Height(400).HtmlAttributes(new { @style = "background:lightgrey" })
    .Content(@<div id="dvpopup">
    </div>

)
   )

<div id="dialog">
    <img id="busyLoading" src="../../Content/kendo/2012.3.1315/Black/loading-image.gif"
        class="centered" />
</div>
<script type="text/javascript">
    $(document).ready(
       function () {
           $('#busyLoading').hide();
       });
    function UnblockUI() {
        $.unblockUI();
    }
    function BlockUI() {
        $.blockUI({
            message: $('#busyLoading'),
            css: {
                top: '44%',
                left: '50%',
                width: '0px'
            }
        });
    }
    function Change(e) {
        debugger;
        var row = this.select();
        var id = row.data("uid");
        $("#log").html("<input name='rowid' type='hidden' id='rowid' value='" + id + "' />");
    }
    function SaveChanges(e) {
        debugger;
        //  kendo.ui.progress($(this), true);
        this.dataSource.one("change", function (e, data) {
            var wnd = $("#windowCase").data("kendoWindow");
            wnd.close();
        });
    }
    function CaseLink(e) {

        debugger;
        var grid = $('#grdusers').data().kendoGrid;
        var dataItem = grid.dataItem($(e).closest('tr'));
        var wnd = $("#Details").data("kendoWindow");
        var row = $("#grdusers").data("kendoGrid").tbody.find("tr[data-uid='" + dataItem.uid + "']");
        var url;
        var title;
        var width;
        debugger;
        title = "Associate Case(s) with Client";
        url = "/Client/_CaseLinking/?clientid=" + dataItem.Id;
        width = 900;

        var window = $("#windowCase"),
        wndObject;
        if (!(wndObject = window.data("kendoWindow"))) {
            wndObject = window.kendoWindow({
                modal: true,
                height: 400,
                close: function (data) {
                    // alert(e.id);
                    $(e).val("0");
                    return true;
                }
            }).data("kendoWindow");
        }
        window.width(width);
        wndObject.title(title);
        $.ajax({
            type: "GET",
            url: url,
            dataType: "html",
            success: function (evt) {
                UnblockUI();

                wndObject.center().open();
                wndObject.content(evt);
            },
            error: function (req, status, error) {
                UnblockUI();
                alert("Error!Occured");
            }
        });
    }
    function onEdit(e) {
        debugger;
        // alert("t");
        if (e.model.isNew()) {
            // e.container.find('[data-role=combobox]').data().kendoComboBox.select(0);
            e.container.kendoWindow("title", "New Client");
        }
        else
            e.container.kendoWindow("title", "Edit Client");
    }
</script>
